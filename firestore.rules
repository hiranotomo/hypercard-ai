rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read/write their own stacks
    match /stacks/{stackId} {
      allow read: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || resource.data.isPublic == true);
      allow create: if request.auth != null && 
        request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if request.auth != null && 
        resource.data.ownerId == request.auth.uid;
      
      // Cards within stacks
      match /cards/{cardId} {
        allow read: if request.auth != null && 
          (get(/databases/$(database)/documents/stacks/$(stackId)).data.ownerId == request.auth.uid ||
           get(/databases/$(database)/documents/stacks/$(stackId)).data.isPublic == true);
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/stacks/$(stackId)).data.ownerId == request.auth.uid;
      }
    }
    
    // Public boards - anyone can read, anyone can write (for demo)
    match /hypercard-memories/{memoryId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if false;
    }
    
    match /connect-board/{connectionId} {
      allow read: if true;
      allow create: if true;
      allow update, delete: if false;
    }
    
    // Site statistics - public read/write for counter
    match /site-stats/{document} {
      allow read: if true;
      allow write: if true;
    }
  }
}